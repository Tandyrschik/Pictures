// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pictures.DAL;

#nullable disable

namespace Pictures.DAL.Migrations
{
    [DbContext(typeof(PicturesDbContext))]
    [Migration("20230904063739_AccountRegistrationUpdate4")]
    partial class AccountRegistrationUpdate4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pictures.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Alex@mail.com",
                            Login = "Alex123",
                            Name = "Alex",
                            Password = "12345",
                            Role = 0,
                            Surname = "Xela"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Daniel@mail.com",
                            Login = "Daniel321",
                            Name = "Daniel",
                            Password = "54321",
                            Role = 0,
                            Surname = "Lainad"
                        });
                });

            modelBuilder.Entity("Pictures.Domain.Entities.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Picture");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Address = "/img/lotos.jpg",
                            Name = "Lotos"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Address = "/img/night city.jpg",
                            Name = "Night city"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Address = "/img/puppy.jpg",
                            Name = "Puppy"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Address = "/img/snowflake.jpg",
                            Name = "Snowflake"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 1,
                            Address = "/img/misty forest.jpg",
                            Name = "Misty forest"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 1,
                            Address = "/img/rabbit.jpg",
                            Name = "Rabbit"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 2,
                            Address = "/img/tulip.jpg",
                            Name = "Tulip"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 2,
                            Address = "/img/zurich.jpg",
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 2,
                            Address = "/img/evening sea.jpg",
                            Name = "Evening sea"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 2,
                            Address = "/img/bear.jpg",
                            Name = "Bear"
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 2,
                            Address = "/img/cat.jpg",
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 2,
                            Address = "/img/helix nebula.jpg",
                            Name = "Helix nebula"
                        });
                });

            modelBuilder.Entity("Pictures.Domain.Entities.Picture", b =>
                {
                    b.HasOne("Pictures.Domain.Entities.Account", "Account")
                        .WithMany("Pictures")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Pictures.Domain.Entities.Account", b =>
                {
                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
